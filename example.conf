# https://github.com/nekwebdev/chocolate-template
# @nekwebdev
# LICENSE: GPLv3
# drives
CHOCO_DRIVE="" # name of the drive: sda, vda, nvme0n1 etc...
CHOCO_PARTITION=true # do paritioning
CHOCO_PARTONLY=false # only do partitioning
CHOCO_SWAP="2G" # size of swap partition, use G or M: 3G or 2000M
CHOCO_SWAPFILE=false # use a swapfile
CHOCO_ROOT="" # size of root partition, use G or M: 15G or 42500M
CHOCO_DATA=false # create a data ext4 partition mounted in /data that uses the rest of the available space on the disk
CHOCO_LUKS=false # LUKS encrypt swap and root partitions
CHOCO_BTRFS=false # use btrfs for root, @root, @home, @var_log and @snapshots subvolumes will be setup
CHOCO_SNAPPER=false # configure snapper for automatic snapshots of the @root subvolume.
CHOCO_PROBER=false # probe for other os when configuring grub
CHOCO_EFI="" # efi partition to mount to /boot/efi in chroot for dual boot

# system
CHOCO_ZEN=false # use the zen kernel
CHOCO_LTS=false # use the lts kernel, only one can be chose or you'll get an error.

# localization
CHOCO_MIRRORS="United States"
CHOCO_REGION="Etc/UTC"
CHOCO_KEYMAP="us"
CHOCO_LANG="en_US.UTF-8"
CHOCO_LOCALE="UTF-8"
CHOCO_VFONT="lat1-14" # ter-132n large terminus-font find them with /usr/share/kbd/consolefonts | grep ...
CHOCO_FONTMAP="8859-1"
CHOCO_HOSTNAME="chocolate"

# beyond vanilla
CHOCO_AUR="" # install an aur helper, yay or paru, will not install if empty
CHOCO_VM=false # install vm drivers
CHOCO_XORG=false # install xorg-server with vga drivers
CHOCO_NVIDIA=false # use NVIDIA proprietary drivers
CHOCO_EXTRA=false # run extra script chrooted as root in /mnt at the end of the install, all arguments given to chocolate.sh will be passed to that script.
CHOCO_PKGS="/root/packages.csv" # path to the packages list csv file for extra.sh
